#!/usr/bin/env python3
"""
Support Troubleshooting Toolkit - HTTP check
Simple CLI to fetch a URL and show status, final URL, timings and headers.
"""

import time
import requests

def http_check(url):
    # normalize input
    if not url.startswith("http://") and not url.startswith("https://"):
        url = "http://" + url

    print(f"\n== HTTP check: {url} ==")
    try:
        start = time.time()
        r = requests.get(url, timeout=10, allow_redirects=True)
        elapsed = time.time() - start

        print(f"Status code: {r.status_code}")
        print(f"Final URL: {r.url}")
        print(f"Elapsed time: {elapsed:.2f}s")
        print("\nResponse headers:")
        for k, v in r.headers.items():
            print(f"  {k}: {v}")
        # a helpful cache-related quick view if present
        cache_hdrs = {h: r.headers[h] for h in r.headers if 'cache' in h.lower() or h.lower() in ('age','etag','expires')}
        if cache_hdrs:
            print("\nCache-related headers (quick view):")
            for k,v in cache_hdrs.items():
                print(f"  {k}: {v}")
    except requests.exceptions.RequestException as e:
        print("Error fetching URL:", e)

def main():
    print("Support Troubleshooting Toolkit - HTTP check")
    url = input("Enter URL to check (e.g. https://example.com): ").strip()
    if not url:
        print("No URL provided. Exiting.")
        return
    http_check(url)

if __name__ == "__main__":
    main()
#!/usr/bin/env python3
"""
Support Troubleshooting Toolkit - CLI skeleton
"""
def main():
    print("Support Troubleshooting Toolkit - basic CLI skeleton")

if __name__ == "__main__":
    main()



												








